<?xml version="1.0"?>
<!--
###################################################
##Stream to Vector JUANK
###################################################
 -->
<block>
  <name>prueba</name>
  <key>DataConversion_prueba</key>
  <!--<import>from gnuradio import blocks</import>-->
  <category>DataConversion</category>
  <import>import DataConversion</import>
  <make>DataConversion.prueba($tipo.size*$vlen, $num_items)</make>
  <param>
	<name>IO Type</name>
	<key>tipo</key>
	<type>enum</type>
	<option>
		<name>Complex</name>
		<key>complex</key>
		<opt>size:gr.sizeof_gr_complex</opt>
	</option>
	<option>
		<name>Float</name>
		<key>float</key>
		<opt>size:gr.sizeof_float</opt>
	</option>
	<option>
		<name>Int</name>
		<key>int</key>
		<opt>size:gr.sizeof_int</opt>
	</option>
	<option>
		<name>Short</name>
		<key>short</key>
		<opt>size:gr.sizeof_short</opt>
	</option>
	<option>
		<name>Byte</name>
		<key>byte</key>
		<opt>size:gr.sizeof_char</opt>
	</option>
  </param>
  <param>
	<name>Num Items</name>
	<key>num_items</key>
	<value>2</value>
	<type>int</type>
  </param>
  <param>
	<name>Vec Length</name>
	<key>vlen</key>
	<value>1</value>
	<type>int</type>
  </param>
  <check>$num_items &gt; 0</check>
  <check>$vlen &gt;= 1</check>
  <sink>
	<name>in</name>
	<type>$tipo</type>
	<vlen>$vlen</vlen>
  </sink>
  <source>
	<name>out</name>
	<type>$tipo</type>
	<vlen>$vlen*$num_items</vlen>
  </source>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
 
  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
 

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
 
</block>
